lines(X, Y, lwd = 1.8, col = "black")
i <- X >= c_neg & X <= c_pos
polygon(c(c_neg,X[i],c_pos), c(0,Y[i],0), col="lightblue")
lines(
c(c_neg, c_neg),
c(0, y_top),
col = "steelblue",  lwd = 2.5)
lines(
c(c_pos, c_pos),
c(0, y_top),
col = "steelblue", lwd = 2.5)
text(0, .06,
"90%",
col = "black")
par(mar = c(1.5, 1, 1, 1))
c_neg <- -qt(.95,8); c_pos <- qt(.95,8); y_top <- dt(c_neg,8)
plot(c(-3, 3),
c(0, dnorm(0)),
type = 'n',
axes = FALSE,
xlab="",
ylab="")
axis(1, at = c(-3,c_neg,0,c_pos,3), labels = c("-3","-c","0","c","3"))
#abline(h = 0)
X <- seq(-4, 4, 0.01)
Y <- dt(X, 8)
lines(X, Y, lwd = 1.8, col = "black")
i <- X >= c_neg & X <= c_pos
polygon(c(c_neg,X[i],c_pos), c(0,Y[i],0), col="lightblue")
lines(
c(c_neg, c_neg),
c(0, y_top),
col = "steelblue",  lwd = 2.5)
lines(
c(c_pos, c_pos),
c(0, y_top),
col = "steelblue", lwd = 2.5)
text(0, .06,
"90%",
col = "black")
par(mar = c(2, 1, 1, 1))
c_neg <- -qt(.95,8); c_pos <- qt(.95,8); y_top <- dt(c_neg,8)
plot(c(-3, 3),
c(0, dnorm(0)),
type = 'n',
axes = FALSE,
xlab="",
ylab="")
axis(1, at = c(-3,c_neg,0,c_pos,3), labels = c("-3","-c","0","c","3"))
#abline(h = 0)
X <- seq(-4, 4, 0.01)
Y <- dt(X, 8)
lines(X, Y, lwd = 1.8, col = "black")
i <- X >= c_neg & X <= c_pos
polygon(c(c_neg,X[i],c_pos), c(0,Y[i],0), col="lightblue")
lines(
c(c_neg, c_neg),
c(0, y_top),
col = "steelblue",  lwd = 2.5)
lines(
c(c_pos, c_pos),
c(0, y_top),
col = "steelblue", lwd = 2.5)
text(0, .06,
"90%",
col = "black")
par(mar = c(2, 1, 1, 1))
c_neg <- -qt(.95,8); c_pos <- qt(.95,8); y_top <- dt(c_neg,8)
plot(c(-3, 3),
c(0, dnorm(0)),
type = 'n',
axes = FALSE,
xlab="",
ylab="")
axis(1, at = c(-3,c_neg,0,c_pos,3), labels = c("-3","-c","0","c","3"))
abline(h = 0)
X <- seq(-4, 4, 0.01)
Y <- dt(X, 8)
lines(X, Y, lwd = 1.8, col = "black")
i <- X >= c_neg & X <= c_pos
polygon(c(c_neg,X[i],c_pos), c(0,Y[i],0), col="lightblue")
lines(
c(c_neg, c_neg),
c(0, y_top),
col = "steelblue",  lwd = 2.5)
lines(
c(c_pos, c_pos),
c(0, y_top),
col = "steelblue", lwd = 2.5)
text(0, .06,
"90%",
col = "black")
A = ['a','b','c']
A = list(['a','b','c'])
A = list('a','b','c')
B = list('a','d','e')
union(A,B)
C=union(A,B)
C = intersect(A,B)
C
.99^60
60*60
.99^3600
5*60
.99^300
.99^600
1/.01
choose(4,2)
s = 0
for (x in 6:10){
p = choose(30,x)*(choose(90,10-x))/choose(120,10)
s = s+10
}
s
s = 0
for (x in 6:10){
p = choose(30,x)*(choose(90,10-x))/choose(120,10)
s = s+p
}
s
phyper(5,30,90,10)
1-phyper(5,30,90,10)-s
s
10*dbinom(2,100,.02)
40*dbinom(0,100,.02)
15*dbinom(1,100,.02)
2.73+10+5.31+4.06
s = 0
for (x in 3:100){
s = s + (25*x-40)*dbinom(x,100,.02)
}
s + 10*dbinom(2,100,.02)
2.73+10+5.31+4.06 - 2.73
#Scenario 1: paying each time:
(cost_1 = n*meter)
#parking meter
p = .03
n = 100
fine_2 = 10
fine_3 = 25
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
(cost_2 = 25*n*p - 40 + 40*dbinom(0,n,p) + 15*dinom(1,n,p))
(cost_2 = 25*n*p - 40 + 40*dbinom(0,n,p) + 15*dbinom(1,n,p))
#parking meter
p = .02
n = 100
fine_2 = 10
fine_3 = 25
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
s = 0
(cost_2 = 25*n*p - 40 + 40*dbinom(0,n,p) + 15*dbinom(1,n,p))
#parking meter
p = .03
n = 100
fine_2 = 10
fine_3 = 25
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
s = 0
(cost_2 = 25*n*p - 40 + 40*dbinom(0,n,p) + 15*dbinom(1,n,p))
75-40+40*dbinom(0,100,.03)+15*dbinom(1,100,.03)
#parking meter
p = .03
n = 100
b = 10 # fine for second infraction
c = 25 # fine for subsequent infractions
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)*(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
#parking meter
p = .03
n = 100
b = 5 # fine for second infraction
c = 20 # fine for subsequent infractions
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)*(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
#parking meter
p = .05
n = 100
b = 5 # fine for second infraction
c = 10 # fine for subsequent infractions
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)*(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
#parking meter
p = .05
n = 100
b = 2 # fine for second infraction
c = 5 # fine for subsequent infractions
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)*(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
#parking meter
p = .04
n = 100
b = 5 # fine for second infraction
c = 10 # fine for subsequent infractions
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)*(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
#parking meter
p = .05
n = 100
b = 5 # fine for second infraction
c = 10 # fine for subsequent infractions
meter = .25
#Scenario 1: paying each time:
(cost_1 = n*meter)
#Scenario 2: never paying
(cost_2 = (b-2*c)+c*n*p-(b-2*c)*(1-p)^n-(b-c)*100*p*(1-p)^(n-1))
difference = c()
for (i in 1:6){
for (j in 1:6){
difference=c(difference,abs(i-j))
}
}
df = as.data.frame(matrix(difference,ncol=6,byrow=TRUE))
colnames(df)=paste(1:6)
df$`Die1|Die2`=paste(1:6)
kable(df[,c(7,1:6)],caption="Difference of two dice", align = "c") %>%
kable_styling(bootstrap_options = c("hover"),full_width = F) %>%
column_spec(1, bold = T) %>%
column_spec(2, border_left = T)
library(tidyverse)
library(kableExtra)
difference = c()
for (i in 1:6){
for (j in 1:6){
difference=c(difference,abs(i-j))
}
}
df = as.data.frame(matrix(difference,ncol=6,byrow=TRUE))
colnames(df)=paste(1:6)
df$`Die1|Die2`=paste(1:6)
kable(df[,c(7,1:6)],caption="Difference of two dice", align = "c") %>%
kable_styling(bootstrap_options = c("hover"),full_width = F) %>%
column_spec(1, bold = T) %>%
column_spec(2, border_left = T)
red = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
blue = rep(c(1,2,3,4,5,6),6)
Y = abs(red-blue)
dfY = matrix(Y,ncol=6,byrow=T)
colnames(dfY)=as.character(1:6)
rownames(dfY)=as.character(1:6)
kbl(dfY,row.names=T,align="c",caption="Y, the absolute value of the difference of two dice") %>% kable_styling(latex_options = "hold_position") %>% kable_classic_2(full_width=F) %>% row_spec(0,color="blue") %>% column_spec(1,color="red") %>% column_spec(2,border_left = T)
X = c(5,6,7,8,9)
Px = c(0.1,0.1,0.3,0.4,0.1)
trials=10000
results=table(sample(X,trials,replace=TRUE,Px))
table(results)/trials
trials=10000
results=table(sample(X,trials,replace=TRUE,Px))
table(results)/trials
trials=10000
results=table(sample(X,trials,replace=TRUE,Px))
table(results)
table(sample(X,trials,replace=TRUE,Px))
table(sample(X,trials,replace=TRUE,Px))/trials
round(table(sample(X,10000,replace=TRUE,Px))/trials,2)
round(table(sample(X,10000,replace=TRUE,Px))/trials,3)
family=c("Bob", "Edgar", "Pluotika", "Otto", "Ruth", "Slarftel")
results=sample(family,10000,replace=TRUE)
df = data.frame(table(results))
View(df)
ggplot(df,aes(x=results,y=Freq))+
geom_bar(stat="identity", width=0.5)+
xlab("Name")+ylab("freq")
ggplot(df,aes(x=results,y=Freq))+
geom_bar(stat="identity", width=0.5)+
xlab("Name")+ylab("freq")
library(tidyverse)
ggplot(df,aes(x=results,y=Freq))+
geom_bar(stat="identity", width=0.5)+
xlab("Name")+ylab("freq")
ggplot(df,aes(x=results,y=Freq))+
geom_bar(stat="identity", width=0.5)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df,aes(x=results,y=Freq))+
geom_bar(stat="identity", width=0.5)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df,aes(x=results,y=Freq))+
geom_bar(aes(col=results),stat="identity", width=0.7)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df,aes(x=results,y=Freq))+
geom_bar(aes(fill=results),stat="identity", width=0.7)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df,aes(x=results,y=Freq))+
geom_bar(aes(fill=results),stat="identity", width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+
theme_get()
family=c("Bob", "Edgar", "Pluotika", "Otto", "Ruth", "Slarftel")
results=sample(family,10000,replace=TRUE)
df = data.frame(table(results))
View(df)
ggplot(df,aes(x=results,y=Freq))+
geom_bar(aes(fill=results),stat="identity", width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+
theme_get()
df = data.frame(results)
ggplot(df,aes(x=results,y=..count..))+
geom_bar(aes(fill=results),stat="identity", width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df)+
geom_bar(aes(x=results,fill=results),stat="identity", width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df)+
geom_bar(aes(x=results,fill=results), width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+
theme_get()
family=c("Bob", "Edgar", "Pluotika", "Otto", "Ruth", "Slarftel")
results=sample(family,10000,replace=TRUE)
df = data.frame(results)
ggplot(df)+
geom_bar(aes(x=results), width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
results=sample(family,10000,replace=TRUE)
df = data.frame(results)
ggplot(df)+
geom_bar(aes(x=results))+
xlab("Name")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
results=sample(family,10000,replace=TRUE)
df = data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results))+
xlab("Name")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
results=sample(family,10000,replace=TRUE)
df = data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results),show.legend=FALSE)+
xlab("Name")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
family=c("Bob", "Edgar", "Pluotika", "Otto", "Ruth", "Slarftel")
results=sample(family,10000,replace=TRUE)
df = data.frame(table(results))
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+
theme_get()
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Name")+ylab("freq")+ggtitle("Pick a seal, any seal!")
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
results=sample(family,10000,replace=TRUE)
df = data.frame(table(results))
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
family=c("Bob", "Edgar", "Pluotika", "Otto", "Ruth", "Slarftel")
results=sample(family,10000,replace=TRUE)
df = data.frame(table(results))
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
df = as.data.frame(table(results))
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
df = as.data.frame(table(results))
ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
df = as.data.frame(table(results))
pl<-ggplot(df)+
geom_col(aes(x=results,y=Freq,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
print(pl)
family=c("Bob", "Edgar", "Pluotika", "Otto", "Ruth", "Slarftel")
results=sample(family,10000,replace=TRUE)
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results), width=0.7,show.legend=FALSE)+
xlab("Seal")+ylab("freq")+ggtitle("Pick a seal, any seal!")
theme_get()
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results)
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results))
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results))
ggplot(df)+
geom_bar(aes(x=results,fill=results))+ggtitle("Pick a seal, any seal!")
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results))+xlab("Name")+ggtitle("Pick a seal, any seal!")
ggplot(df)+
geom_bar(aes(x=results,fill=results))+xlab("Name")+ggtitle("Pick a seal, any seal!")+theme_get()
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results))+xlab("Name")+ggtitle("Pick a seal, any seal!")+theme(legend.position = none)
df = as.data.frame(results)
ggplot(df)+
geom_bar(aes(x=results,fill=results))+xlab("Name")+ggtitle("Pick a seal, any seal!")+theme(legend.position = "none")
trials=10000
x=rexp(trials,rate=1/5)
s=2; t=3
p1=sum(x > t)/trials #P(X > t)
p2=sum(x[which(x > s)]>s+t)/sum(x>s) #P(X>t+s | X > s)
print(paste("Estimate for P(X>t):",round(p1,3)))
print(paste("Estimate for P(X>t+s | X>s):",round(p2,3)))
ggplot(data.frame(x=seq(0,10,by=.02),y=dgamma(seq(0,10,by=.02),2,1)))+
geom_line(aes(x,y),col="orange")+
ggtitle("A skewed right density curve")+
ylab("")
ggplot(data.frame(x=seq(0,10,by=.02),y=dgamma(seq(0,10,by=.02),2,1)))+
geom_line(aes(x,y),col="orange")+
ggtitle("A skewed right density curve")+
ylab("")
qgamma(.9,shape=8,rate=1/6)
plot(dgamma(seq(0,100,.2),shape=8,rate=1/6)
plot(dgamma(seq(0,100,.2),shape=8,rate=1/6))
plot(dgamma(seq(0,100,.2),shape=8,rate=6))
plot(dgamma(seq(0,10,.2),shape=8,rate=6))
pgamma(5,shape=3,scale=4)
pgamma(5,shape=3,rate=1/4)
pgamma(5,scale=4,rate=1/4)
x1=c(seq(0,.399,.001),seq(.4,.599,.001),seq(.6,.799,.001),
seq(.8,.999,.001),seq(1,1.2,.001),seq(1.201,2,.001))
y1=c(rep(0,400),rep(f_pdf(.5),200),rep(f_pdf(.7),200),rep(f_pdf(.9),200),
rep(f_pdf(1.1),201),rep(0,800))
f_pdf <- function(x){
return(3*(2-x)^2/8)
}
x=seq(0,2,by=.01)
plot(x,f_pdf(x),type="l",
main="the density function")
mid_sum=function(f,a,b,n){
#inputs:
#f - function
#a, b - lower and upper bounds of interval
#n - number of subdivisions
#output: The sum of the n rectangle areas whose heights are
# determined by the midpoint rule
dx=(b-a)/n
ticks=seq(a+dx/2,b,dx)
return(sum(f(ticks)*dx))
}
x1=c(seq(0,.399,.001),seq(.4,.599,.001),seq(.6,.799,.001),
seq(.8,.999,.001),seq(1,1.2,.001),seq(1.201,2,.001))
y1=c(rep(0,400),rep(f_pdf(.5),200),rep(f_pdf(.7),200),rep(f_pdf(.9),200),
rep(f_pdf(1.1),201),rep(0,800))
ggplot(data.frame(x=x1,y=y1,f=f_pdf(x1)))+
geom_line(aes(x,f))+
geom_area(aes(x,y),col="white",fill="steelblue",alpha=.6)+
geom_segment(aes(x=0.59,y=0,xend=0.59,yend=f_pdf(0.5)),col="white")+
geom_segment(aes(x=0.79,y=0,xend=0.79,yend=f_pdf(0.7)),col="white")+
geom_segment(aes(x=0.99,y=0,xend=0.99,yend=f_pdf(0.9)),col="white")+
geom_segment(aes(x=1.2,y=0,xend=1.2,yend=f_pdf(1.1)),col="white")+
geom_segment(aes(x=0.5,y=0,xend=0.5,yend=f_pdf(0.5)),col="red",linetype="dashed")+
geom_segment(aes(x=0.7,y=0,xend=0.7,yend=f_pdf(0.7)),col="red",linetype="dashed")+
geom_segment(aes(x=0.9,y=0,xend=0.9,yend=f_pdf(0.9)),col="red",linetype="dashed")+
geom_segment(aes(x=1.1,y=0,xend=1.1,yend=f_pdf(1.1)),col="red",linetype="dashed")+
scale_x_continuous(breaks=c(0.4,0.6,0.8,1.0,1.2))+
geom_hline(yintercept=0,size=.5)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())
x1=c(seq(0,.399,.001),seq(.4,.599,.001),seq(.6,.799,.001),
seq(.8,.999,.001),seq(1,1.2,.001),seq(1.201,2,.001))
y1=c(rep(0,400),rep(f_pdf(.5),200),rep(f_pdf(.7),200),rep(f_pdf(.9),200),
rep(f_pdf(1.1),201),rep(0,800))
df <- data.frame(x=x1,y=y1,f=f_pdf(x1))
ggplot()+
geom_line(data=df,aes(x,f))+
geom_area(data=df,aes(x,y),col="white",fill="steelblue",alpha=.6)+
geom_segment(aes(x=0.59,y=0,xend=0.59,yend=f_pdf(0.5)),col="white")+
geom_segment(aes(x=0.79,y=0,xend=0.79,yend=f_pdf(0.7)),col="white")+
geom_segment(aes(x=0.99,y=0,xend=0.99,yend=f_pdf(0.9)),col="white")+
geom_segment(aes(x=1.2,y=0,xend=1.2,yend=f_pdf(1.1)),col="white")+
geom_segment(aes(x=0.5,y=0,xend=0.5,yend=f_pdf(0.5)),col="red",linetype="dashed")+
geom_segment(aes(x=0.7,y=0,xend=0.7,yend=f_pdf(0.7)),col="red",linetype="dashed")+
geom_segment(aes(x=0.9,y=0,xend=0.9,yend=f_pdf(0.9)),col="red",linetype="dashed")+
geom_segment(aes(x=1.1,y=0,xend=1.1,yend=f_pdf(1.1)),col="red",linetype="dashed")+
scale_x_continuous(breaks=c(0.4,0.6,0.8,1.0,1.2))+
geom_hline(yintercept=0,size=.5)+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())
